import { Injectable, NestMiddleware } from '@nestjs/common';
import { Request, Response, NextFunction } from 'express';
import { AuthService } from '../auth.service';

@Injectable()
export class SessionMiddleware implements NestMiddleware {
  constructor(private readonly authService: AuthService) {}

  use(req: Request, res: Response, next: NextFunction) {
    const sessionId = req.cookies?.sessionId;

    if (!sessionId) {
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
      const newSessionId = this.authService.createNewSession();
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º cookie —Å –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–µ–π (–∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ)
      res.cookie('sessionId', newSessionId, { httpOnly: true });

      console.log(`üÜï –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è: ${newSessionId}`);
      
      // ‚Üê –ë–õ–û–ö–ò–†–£–ï–ú –ó–ê–ü–†–û–° –¥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∞–ª–∏–¥–Ω–æ–π —Å–µ—Å—Å–∏–∏ (–∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ)
      res.status(401);
      res.end();
      return;
    }

    next();
  }
}