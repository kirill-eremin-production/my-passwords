import bodyParser from 'body-parser'
import cookieParser from 'cookie-parser'
import 'dotenv/config'
import express from 'express'
import rateLimit from 'express-rate-limit'
import helmet from 'helmet'

import { validateSession } from './handlers/auth'
import biometricRoutes from './handlers/biometric'
import { generateAndSendCode } from './handlers/code'
import { getPasswords, postPasswords } from './handlers/passwords'

import { authorizationMiddleware } from './middlewares/authorization/authorizationMiddleware'
import { sessionMiddleware } from './middlewares/authorization/sessionMiddleware'

import { prepareBiometricStore } from './biometricStore'
import { init } from './init.js'

init()
prepareBiometricStore()

const app = express()

// –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ trust proxy –¥–ª—è —Ä–∞–±–æ—Ç—ã –∑–∞ nginx
// –ü–æ–∑–≤–æ–ª—è–µ—Ç Express –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å IP –∞–¥—Ä–µ—Å–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏
app.set('trust proxy', 1) // –î–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤–æ–º—É –ø—Ä–æ–∫—Å–∏ (nginx)

// –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨: Helmet –¥–ª—è –±–∞–∑–æ–≤–æ–π –∑–∞—â–∏—Ç—ã
app.use(
    helmet({
        contentSecurityPolicy: {
            directives: {
                defaultSrc: ["'self'"],
                styleSrc: ["'self'", "'unsafe-inline'"],
                scriptSrc: ["'self'"],
                imgSrc: ["'self'", 'data:', 'https:'],
            },
        },
        hsts: {
            maxAge: 31536000,
            includeSubDomains: true,
            preload: true,
        },
    })
)

// –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨: –û–±—â–∏–π rate limiting (100 –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ 15 –º–∏–Ω—É—Ç)
const generalLimiter = rateLimit({
    windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
    max: 100, // 100 –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ –æ–∫–Ω–æ
    message: {
        error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å —ç—Ç–æ–≥–æ IP, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ',
    },
    standardHeaders: true,
    legacyHeaders: false,
    handler: (req, res) => {
        console.warn(`‚ö†Ô∏è Rate limit exceeded for IP: ${req.ip}`)
        res.status(429).json({
            error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å —ç—Ç–æ–≥–æ IP, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ',
        })
    },
})

// –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨: Rate limiting –¥–ª—è –∫–æ–¥–æ–≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (5 –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ 15 –º–∏–Ω—É—Ç)
const authCodeLimiter = rateLimit({
    windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
    max: 5, // –º–∞–∫—Å–∏–º—É–º 5 –∑–∞–ø—Ä–æ—Å–æ–≤ –∫–æ–¥–æ–≤ –∑–∞ 15 –º–∏–Ω—É—Ç
    message: {
        error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫–æ–¥–æ–≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ',
    },
    standardHeaders: true,
    legacyHeaders: false,
    handler: (req, res) => {
        console.warn(`‚ö†Ô∏è Auth code rate limit exceeded for IP: ${req.ip}`)
        res.status(429).json({
            error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫–æ–¥–æ–≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ',
        })
    },
})

// –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨: Rate limiting –¥–ª—è –±–∏–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (10 –ø–æ–ø—ã—Ç–æ–∫ –∑–∞ –º–∏–Ω—É—Ç—É)
const biometricLimiter = rateLimit({
    windowMs: 1 * 60 * 1000, // 1 –º–∏–Ω—É—Ç–∞
    max: 10, // –º–∞–∫—Å–∏–º—É–º 10 –ø–æ–ø—ã—Ç–æ–∫ –∑–∞ –º–∏–Ω—É—Ç—É
    message: {
        error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫ –±–∏–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏',
    },
    standardHeaders: true,
    legacyHeaders: false,
    handler: (req, res) => {
        console.warn(`‚ö†Ô∏è Biometric rate limit exceeded for IP: ${req.ip}`)
        res.status(429).json({
            error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫ –±–∏–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏',
        })
    },
})

// –ü—Ä–∏–º–µ–Ω—è–µ–º –æ–±—â–∏–π rate limiting –∫–æ –≤—Å–µ–º –∑–∞–ø—Ä–æ—Å–∞–º
app.use(generalLimiter)

app.use(cookieParser())
app.use(bodyParser.json())

/** –†—É—á–∫–∏, —Ç—Ä–µ–±—É—é—â–∏–µ –Ω–∞–ª–∏—á–∏—è —Å–µ—Å—Å–∏–∏ */
app.use(sessionMiddleware)

app.post('/api/auth', validateSession)
app.post('/api/code', authCodeLimiter, generateAndSendCode) // –°—Ç—Ä–æ–≥–∏–π –ª–∏–º–∏—Ç –¥–ª—è –∫–æ–¥–æ–≤

// –ë–∏–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —Å rate limiting
app.use('/api/biometric/authenticate', biometricLimiter) // –õ–∏–º–∏—Ç –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
app.use('/api/biometric', biometricRoutes)

/** –†—É—á–∫–∏, —Ç—Ä–µ–±—É—é—â–∏–µ –Ω–∞–ª–∏—á–∏—è –≤–∞–ª–∏–¥–Ω–æ–π —Å–µ—Å—Å–∏–∏ (–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏) */
app.use(authorizationMiddleware)

app.get('/api/passwords', getPasswords)
app.post('/api/passwords', postPasswords)

const PORT = process.env.PORT || 60125
app.listen(PORT, () => {
    console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`)
    console.log('üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞:')
    console.log('  ‚úÖ Rate limiting –≤–∫–ª—é—á–µ–Ω')
    console.log('  ‚úÖ Helmet –∑–∞—â–∏—Ç–∞ –∞–∫—Ç–∏–≤–Ω–∞')
    console.log('  ‚úÖ –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ñ–∞–π–ª–æ–≤–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ')
    console.log('  ‚úÖ –ö—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏ —Å—Ç–æ–π–∫–∏–µ sessionId')
    console.log('  ‚úÖ –ü–æ–ª–Ω–∞—è WebAuthn –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è')
})
