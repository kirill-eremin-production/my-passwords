import { Injectable } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';
import { StoreService } from '../core/services/store.service';
import { TelegramService } from '../core/services/telegram.service';

@Injectable()
export class PasswordsService {
  constructor(
    private readonly storeService: StoreService,
    private readonly telegramService: TelegramService,
    private readonly configService: ConfigService
  ) {}

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –ø–∞—Ä–æ–ª–∏ –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
   */
  getPasswords(): string {
    return this.storeService.readStore();
  }

  /**
   * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–∞—Ä–æ–ª–∏ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç backup –≤ Telegram (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ)
   */
  async savePasswords(requestData: any): Promise<void> {
    const data = JSON.stringify(requestData, null, 4);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ª–æ–∫–∞–ª—å–Ω–æ
    this.storeService.writeStore(data);

    // –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨: –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram —Ç–æ–ª—å–∫–æ –≤ dev —Ä–µ–∂–∏–º–µ –∏ –ø—Ä–∏ —è–≤–Ω–æ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–∏
    const isTelegramEnabled = this.configService.get('ENABLE_TELEGRAM_BACKUP') === 'true';
    const isDevelopment = this.configService.get('NODE_ENV') !== 'production';

    if (isTelegramEnabled && isDevelopment) {
      console.log('üì± –û—Ç–ø—Ä–∞–≤–∫–∞ backup –≤ Telegram (dev —Ä–µ–∂–∏–º)');
      try {
        await this.telegramService.sendFile(data);
      } catch (error) {
        console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', error);
        // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ - backup –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π
      }
    } else {
      if (!isDevelopment) {
        console.log('üîí Telegram backup –æ—Ç–∫–ª—é—á–µ–Ω –≤ production –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏');
      } else {
        console.log('üîí Telegram backup –æ—Ç–∫–ª—é—á–µ–Ω (ENABLE_TELEGRAM_BACKUP=false)');
      }
    }
  }
}